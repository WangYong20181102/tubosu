buildscript {
    repositories {
        mavenCentral()
    }
}





apply plugin: 'android'

dependencies {
    compile fileTree(include: '*.jar', dir: 'libs')
    compile files('libs/BaiduLBS_Android.jar')
    compile files('libs/org.apache.http.legacy.jar')
    compile files('libs/SocialSDK_QQ_Simplify.jar')
    compile files('libs/SocialSDK_WeChat_Simplify.jar')
    compile files('libs/umeng_shareboard_widget.jar')
    compile files('libs/umeng_social_api.jar')
    compile files('libs/umeng_social_shareboard.jar')
    compile files('libs/umeng_social_net.jar')
    compile files('libs/umeng_social_tool.jar')
    compile 'com.readystatesoftware.systembartint:systembartint:1.0.3'
    compile 'jp.co.cyberagent.android.gpuimage:gpuimage-library:1.3.0'
    compile 'jp.wasabeef:glide-transformations:2.0.1'
    compile 'com.android.support:design:26.0.0-alpha1'
    compile 'com.android.support:appcompat-v7:23.4.0'
    compile 'com.android.support:recyclerview-v7:23.4.0'
    compile 'com.android.support:cardview-v7:23.4.0'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    compile 'com.facebook.rebound:rebound:0.3.8'
    compile 'com.squareup.okhttp3:okhttp:3.9.0'
    compile 'org.greenrobot:eventbus:3.0.0'
    compile 'com.android.support:support-v4:26.0.0-alpha1'
    compile 'com.umeng.analytics:analytics:latest.integration'
    compile 'com.google.code.gson:gson:2.8.1'
    compile 'com.jakewharton:butterknife:8.6.0'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.6.0'
//    implementation files('libs/jpush-android-3.0.9.jar')
//    implementation files('libs/jcore-android-1.1.7.jar')
    implementation files('libs/httpmime-4.1.2.jar')
    implementation files('libs/IndoorscapeAlbumPlugin.jar')

    compile 'cn.jiguang.sdk:jpush:3.0.9'  // 此处以JPush 3.0.9 版本为例。
    compile 'cn.jiguang.sdk:jcore:1.1.7'  // 此处以JCore 1.1.7 版本为例。

}




android {
    signingConfigs {
        debug {
            storeFile file('debug.keystore')
            storePassword "android"
            keyAlias "androiddebugkey"
            keyPassword "android"
        }
        release {
            keyAlias 'tubosu'
            keyPassword 'tubosu'
            storeFile file('D:/keystore/keystore')
            storePassword 'tubosu'
        }
    }
    compileSdkVersion 25
    buildToolsVersion '26.0.2'
    defaultConfig {
        applicationId "com.tbs.tobosutype" // 程序的包名
        minSdkVersion 14
        targetSdkVersion 25
        versionCode 24
        versionName "3.5"
        flavorDimensions "versionCode"
        multiDexEnabled true  // 消去重复的jar 引用
        manifestPlaceholders = [UMENG_CHANNEL_VALUE: "aisi"]//多渠道打包标识 默认爱思

        ndk {
            //选择要添加的对应cpu类型的.so库。
            abiFilters 'armeabi', 'armeabi-v7a', 'arm64-v8a'
            // 还可以添加 'x86', 'x86_64', 'mips', 'mips64'
        }

        manifestPlaceholders = [
                JPUSH_PKGNAME : "com.tbs.tobosutype",
                JPUSH_APPKEY : "296b86ca9ffe1bfd4f43b655", //JPush上注册的包名对应的appkey.
                JPUSH_CHANNEL : "developer-default", //暂时填写默认值即可.
        ]
    }

    useLibrary 'org.apache.http.legacy'


    productFlavors {
        aisi {}
        ali {}
        anzhi {}
        appbaidu {}
        apphuawei {}
        applenovo {}
        appmeizu {}
        appoppo {}
        appqihu {}
        appttt {}
        appvivo {}
        appwdj {}
        appxiaomi {}
        appyyb {}
        gaoqu {}
        itools {}
        jifeng {}
        jinli {}
        kuaiyong {}
        kupai {}
        leshi {}
        liqu {}
        mumayi {}
        nduo {}
        nineonezhushou {}
        pingguoyuan {}
        sougou {}
        sumsung {}
        taobao {}
        threeMarket {}
        tongbu {}
        ucmarket {}
        xy {}
        yingyonghui {}
        youyi {}
        zhongxin {}
        zuimei {}
        kuan {}
        tobosu1 {}
        zhuanghaojia {}
        tbspc {}
    }
    productFlavors.all { flavor ->
        flavor.manifestPlaceholders = [UMENG_CHANNEL_VALUE: name]
    }
    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
            jniLibs.srcDirs = ['libs']
        }

        // Move the tests to tests/java, tests/res, etc...
        instrumentTest.setRoot('tests')

        // Move the build types to build-types/<type>
        // For instance, build-types/debug/java, build-types/debug/AndroidManifest.xml, ...
        // This moves them out of them default location under src/<type>/... which would
        // conflict with src/ being used by the main source set.
        // Adding new build types or product flavors should be accompanied
        // by a similar customization.
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }
}
android.applicationVariants.all { variant ->
    variant.outputs.all { output ->
        def outputFile = output.outputFile
        if (outputFile != null && outputFile.name.endsWith('.apk')) {
            File outputDirectory = new File(outputFile.parent);
            def fileName
            if (variant.buildType.name == "release") {
//                    fileName = "app_v${defaultConfig.versionName}_${packageTime()}_${variant.productFlavors[0].name}.apk"
                fileName = "tobosuType_v3.5_${variant.productFlavors[0].name}.apk"
            } else {
//                    fileName = "app_v${defaultConfig.versionName}_${packageTime()}_beta.apk"
                fileName = "tobosuType_v3.5_${variant.productFlavors[0].name}_beta.apk"
            }
//            output.outputFile = new File(outputDirectory, fileName)
//            outputFileName="${variant.applicationId}-${ buildType.name}-${variant.productFlavors[0].name}.apk"
            outputFileName = fileName
        }
    }
}
